import tkinter as tk
import os #thư viện để tương tác với hệ điều hành
from tkinter import filedialog
def uploadbuttoncheck():
    # Tạo cửa sổ mới cho tính năng upload
    upload_window = tk.Toplevel()
    upload_window.title("Upload File")
    upload_window.geometry("400x300")
    # Tiêu đề cho cửa sổ upload
    label_upload = tk.Label(upload_window, text="Upload File", font=("Arial", 20))
    label_upload.pack(pady=20)
    file_path=filedialog.askopenfilename(title="Chọn file",filetypes=(("All files", "*.*"),)) #Mở browse file để chọn file muốn upload
    file_name=os.path.basename(file_path) #lấy tên file muốn upload từ địa chỉ của file đó
    label_filepath = tk.Label(upload_window, text=file_name, font=("Arial", 16))
    label_filepath.pack(pady=10)
    # Nút upload
    button_confirm_upload = tk.Button(upload_window,text="Upload",font=("Arial", 14))
    button_confirm_upload.pack(pady=20)

    # Nút đóng cửa sổ
    button_close = tk.Button(upload_window,text="Close",font=("Arial", 14),command=upload_window.destroy)
    button_close.pack(pady=10)
def downloadbuttoncheck():
    # Tạo cửa sổ mới cho tính năng upload
    download_window = tk.Toplevel()
    download_window.title("Upload File")
    download_window.geometry("400x300")

    # Tiêu đề cho cửa sổ upload
    label_download = tk.Label(download_window, text="Upload File", font=("Arial", 20))
    label_download.pack(pady=20)

    # Ô nhập đường dẫn file
    label_filepath = tk.Label(download_window, text="File Path:", font=("Arial", 14))
    label_filepath.pack(pady=10)
    entry_filepath = tk.Entry(download_window, width=30, font=("Arial", 14))
    entry_filepath.pack(pady=10)

    # Nút upload
    button_confirm_upload = tk.Button(download_window,text="Upload",font=("Arial", 14))
    button_confirm_upload.pack(pady=20)

    # Nút đóng cửa sổ
    button_close = tk.Button(download_window,text="Close",font=("Arial", 14),command=download_window.destroy)
    button_close.pack(pady=10)
def check_account(inputusername,inputpassword):
    account_name=inputusername.get()
    account_password=inputpassword.get()
    with open('account.txt','r') as file: #Mở file "account.txt" trong chế độ đọc với lệnh file để đảm bảo file sẽ đóng sao khi thực hiện
        check_legit=False
        for line in file:
            accountdetails=line.strip() #xóa các kí tự thừa ở đầu và cuối dòng
            accountdetails=accountdetails.split()
            if account_name in line and accountdetails[1]==account_password: #kiểm tra username có nằm ở dòng hiện tại không,nếu có thì kiểm tra mật khẩu
                check_legit=True
                break
        return check_legit
def check_login():
    username=inputusername.get() #lấy thông tin nhập vào của ô nhập username
    password=inputpassword.get()  #lấy thông tin nhập vào của ô nhập password
    if(check_account(inputusername,inputpassword)==True):
        window.destroy() #Xóa cửa sổ đang nhập
        newwindow=tk.Tk() #Tạo cửa sổ mới 
        newwindow.title("Menu")
        newwindow.geometry("600x400")
        button_uploadfile=tk.Button(newwindow,text="Upload file",width=20,font=("Arial",20),command=uploadbuttoncheck)
        button_uploadfile.pack(pady=10);
        button_downloadfile=tk.Button(newwindow,text="Download file",width=20,font=("Arial",20),command=downloadbuttoncheck)
        button_downloadfile.pack(pady=10)
    else:
        label_error.config(text="Invalid username or password", fg="red") #thay đổi tiêu đề in lỗi khi username hoặc password không đúng
def check_createaccount(signup_inputusername, signup_inputpassword, signup_confirminputpassword, error_line):
    newusername=signup_inputusername.get()
    newpassword= signup_inputpassword.get()
    confirm_password = signup_confirminputpassword.get()  
    if newpassword != confirm_password:
        error_line.config(text="Passwords do not match", fg="red")
        return
    with open('account.txt','r') as file:
        check_username=False
        check_password=False
        for line in file:
            accountdetails=line.strip() 
            accountdetails=accountdetails.split()
            # Kiểm tra xem tên tài khoản đã tồn tại chưa
            if newusername == accountdetails[0]:
                check_username = True
            # Kiểm tra mật khẩu đã tồn tại cho tên tài khoản này chưa
            if newpassword == accountdetails[1]:
                check_password = True
        if check_username==True:
            error_line.config(text="Username already exists", fg="red")
        elif check_password==True:
            error_line.config(text="Password already exists", fg="red")
        elif  check_username==True and  check_password==True:
            error_line.config(text="Username and Password already exists", fg="red")
        else:
            error_line.config(text="Account created successfully", fg="green")
            with open('account.txt', 'a') as file:                 #Mở file và lưu tài khoản vừa tạo vào file
                file.write(f"{newusername} {newpassword}\n")
def check_signup():
    signup_win=tk.Tk()
    signup_win.title("Sign Up")
    signup_win.geometry("600x400")
    signup_username=tk.Label(signup_win,text="username",font=("Arial", 20)) #tiêu đề của ô username
    signup_username.pack() #in tiêu đề lên cửa sổ
    signup_inputusername=tk.Entry(signup_win,width=16,font=("Arial",20)) #Ô nhập username
    signup_inputusername.pack() #in ô nhập username lên cửa sổ
    signup_password=tk.Label(signup_win,text="Password",font=("Arial",20)) #tiêu đề của ô mật khẩu
    signup_password.pack(pady=10) #in tiêu đề của ô mật khẩu
    signup_inputpassword=tk.Entry(signup_win,width=16,font=("Arial",20)) #Ô nhập mật khẩu
    signup_inputpassword.pack(pady=10) #in ô nhập mật khẩu lên cửa sổ
    signup_confirmpassword=tk.Label(signup_win,text=" Confirm password",font=("Arial",20)) #tiêu đề của ô mật khẩu
    signup_confirmpassword.pack(pady=10) #in tiêu đề của ô mật khẩu
    signup_confirminputpassword=tk.Entry(signup_win,width=16,font=("Arial",20)) #Ô nhập mật khẩu
    signup_confirminputpassword.pack(pady=10) #in ô nhập mật khẩu lên cửa sổ
    error_line=tk.Label(signup_win,text="",font=("Arial",14))
    error_line.pack(pady=10)
    Confirm_button=tk.Button(signup_win,text="Confirm",width=16,height=1, font=("Arial", 14),command=lambda:check_createaccount(signup_inputusername, signup_inputpassword, signup_confirminputpassword, error_line))
    Confirm_button.pack()
window=tk.Tk()
window.title("Sever")
window.geometry("600x400")
label_username=tk.Label(window,text="username",font=("Arial", 20)) #tiêu đề của ô username
label_username.pack() #in tiêu đề lên cửa sổ
inputusername=tk.Entry(window,width=16,font=("Arial",20)) #Ô nhập username
inputusername.pack() #in ô nhập username lên cửa sổ
label_password=tk.Label(window,text="Password",font=("Arial",20)) #tiêu đề của ô mật khẩu
label_password.pack(pady=10) #in tiêu đề của ô mật khẩu
inputpassword=tk.Entry(window,width=16,font=("Arial",20)) #Ô nhập mật khẩu
inputpassword.pack(pady=10) #in ô nhập mật khẩu lên cửa sổ
loginbutton=tk.Button(window,text="Login",width=16,height=1, font=("Arial", 14),command=check_login) #Nút đăng nhập
loginbutton.pack(pady=10) # in nút đăng nhập lên cửa sổ,nút "login" cách 1 khoảng 10 dưới label "username"
signupbutton=tk.Button(window,text="Sign up",width=16,height=1,font=("Arial",14),command=check_signup) #nút tạo tài khoản mới
signupbutton.pack(pady=10)
label_error = tk.Label(window, text="", font=("Arial", 14), fg="red")  #tiêu đề in ra khi có lỗi(để rỗng khi chưa có gì)
label_error.pack(pady=10)
window.mainloop() #khởi chạy giao diện


    
